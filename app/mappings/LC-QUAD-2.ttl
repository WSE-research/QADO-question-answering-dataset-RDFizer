@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qab: <urn:qa:benchmark#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@base <URL#>.


<#DatasetMapping> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "example.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.[*]"];
    rr:subjectMap [
        rr:template "urn:qa:benchmark#LABEL-dataset";
        rr:class qab:Benchmark];
    rr:predicateObjectMap [
        rr:predicate void:dataDump;
        rr:objectMap [
            rr:template "URL"]];
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            rr:template "LABEL";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate foaf:homepage;
        rr:objectMap [
            rr:template "HOMEPAGE";
            rr:datatype xsd:string]].


<#QueryMapping> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "example.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.[*]"];
    rr:subjectMap [
        rr:template "urn:qa:benchmark#LABEL-query-{uid}";
        rr:class qab:Query];
    rr:predicateObjectMap [
        rr:predicate qab:queryText;
        rr:objectMap [
            rml:reference "sparql_wikidata";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:queryText;
        rr:objectMap [
            rml:reference "sparql_dbpedia18";
            rr:datatype xsd:string]].


<#AnswerMapping> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "example.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.[*]"];
    rr:subjectMap [
        rr:template "urn:qa:benchmark#LABEL-answer-{uid}";
        rr:class qab:EmptyAnswer].


<#QuestionMapping> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "example.json";
        rml:referenceFormulation ql:JSONPath;
        rml:iterator "$.[*]"];
    rr:subjectMap [
        rr:template "urn:qa:benchmark#LABEL-question-{uid}";
        rr:class qab:ValidQuestion];
    rr:predicateObjectMap [
        rr:predicate qab:hasId;
        rr:objectMap [
            rml:reference "uid";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:hasQuestion;
        rr:objectMap [
            rml:reference "question";
            rr:language "en"]];
    rr:predicateObjectMap [
        rr:predicate qab:templateIndex;
        rr:objectMap [
            rml:reference "template_index";
            rr:datatype xsd:nonNegativeInteger]];
    rr:predicateObjectMap [
        rr:predicate qab:templateId;
        rr:objectMap [
            rml:reference "template_id";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:template;
        rr:objectMap [
            rml:reference "template";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:hasSPARQLQuery;
        rr:objectMap [
            rr:template "urn:qa:benchmark#LABEL-query-{uid}"]];
    rr:predicateObjectMap [
        rr:predicate qab:paraphrasedQuestion;
        rr:objectMap [
            rml:reference "paraphrased_question";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:subgraph;
        rr:objectMap [
            rml:reference "subgraph";
            rr:datatype xsd:string]];
    rr:predicateObjectMap [
        rr:predicate qab:isElementOf;
        rr:objectMap[
            rr:template "urn:qa:benchmark#LABEL-dataset"]];
    rr:predicateObjectMap [
        rr:predicate qab:hasAnswer;
        rr:objectMap [
            rr:template "urn:qa:benchmark#LABEL-answer-{uid}"]];
    rr:predicateObjectMap [
        rr:predicate qab:NNQTQuestion;
        rr:objectMap [
            rml:reference "NNQT_question";
            rr:datatype xsd:string]].
